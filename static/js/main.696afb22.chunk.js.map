{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","cn","to","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","currentSlug","useParams","map","born","died","motherName","fatherName","mother","father","fetchPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","getParents","array","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","isMessageVisible","length","isListVisible","getPeople","rawPeople","preparedPeople","console","error","useEffect","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.696afb22.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const currentSlug = useParams().slug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n            mother,\n            father,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={cn({\n                'has-background-warning': currentSlug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : motherName || '-'}\n              </td>\n\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function fetchPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable no-console */\nimport { FC, useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { fetchPeople } from '../../api';\nimport { Person } from '../../types';\n\nconst getParents = (\n  { motherName, fatherName }: Person,\n  array: Person[],\n) => ({\n  mother: array.find(({ name }) => name === motherName),\n  father: array.find(({ name }) => name === fatherName),\n});\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const isMessageVisible = people.length === 0 && !isLoading;\n  const isListVisible = people.length > 0 && !isLoading;\n\n  const getPeople = async () => {\n    setIsLoading(true);\n    try {\n      const rawPeople = await fetchPeople();\n      const preparedPeople = rawPeople.map(person => ({\n        ...person,\n        ...getParents(person, rawPeople),\n      }));\n\n      setPeople(preparedPeople);\n    } catch (error) {\n      console.error(error);\n\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {isMessageVisible && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isListVisible && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/PeoplePage';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <h1 className=\"title\">Home Page</h1>\n            )}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n\n            <Route\n              path=\"/people/:slug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={(\n              <h1 className=\"title\">Page not found</h1>\n            )}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}